<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/current/mule-tcp.xsd ">
    
    <configuration doc:name="Configuration">
      <expression-language autoResolveVariables="false">
         <import class="javax.xml.bind.DatatypeConverter" /> 
         <global-functions>
            def transformBytesToString() { DatatypeConverter.printHexBinary(payload) }
         </global-functions>
      </expression-language>
    </configuration>

    <!-- Simply use Java inline directly in the in the code. -->
    <!-- This works but is very verbose and there will be redundant code, especially if we have more complex transformations.  -->
    <flow name="FilterBytesAsHexWithoutGlobalFunction" doc:name="FilterBytesAsHexWithoutGlobalFunction">
        <vm:inbound-endpoint exchange-pattern="request-response" path="start1" doc:name="VM"/>
        <logger message="Payload is #[payload] which translates into #[transformBytesToString()]" doc:name="Logger" level="INFO"/>
        <expression-filter expression="#[javax.xml.bind.DatatypeConverter.printHexBinary(payload).equals('7F000001')]" doc:name="Expression"/>
        <set-payload value="Success" doc:name="Set payload to Success"/>
    </flow>
    
    <!-- To reduce redundant code we can define a global function and use it instead. -->
    <!-- This also helps readability of the XML -->
    <flow name="FilterBytesAsHexWithGlobalFunction" doc:name="FilterBytesAsHexWithGlobalFunction">
        <vm:inbound-endpoint exchange-pattern="request-response" path="start2" doc:name="VM"/>
        <logger message="Payload is #[payload] which translates into #[transformBytesToString()]" doc:name="Logger" level="INFO"/>
        <expression-filter expression="#[transformBytesToString().equals('7F000001')]" doc:name="Expression"/>
        <set-payload value="Success" doc:name="Set payload to Success"/>
    </flow>
</mule>
